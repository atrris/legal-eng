# v7_naive.py
# 第七条の検証
# 年金原簿honnin_v7のもとでの検証

### 条文論理式 f7.py ######################################################

被保険者=(lambda d:
           Or(第一号被保険者(d),
              第二号被保険者(d),
              第三号被保険者(d)))
第一号被保険者=(lambda d:
           And(日本国内に住所を有する(d), # honnin_v7
               二十歳以上六十歳未満(d), # honnin_v7
               Not(第二号被保険者(d)),
               Not(第三号被保険者(d)),
               Not(厚生年金保険法老齢等受給可能(d)))) # honnin_v
第二号被保険者=(lambda d:
           厚生年金保険の被保険者(d)) # honnin_v7
第三号被保険者=(lambda d:
           And(被扶養配偶者(d),
               二十歳以上六十歳未満(d)))
被扶養配偶者=(lambda d:
           And(第二号被保険者の配偶者(d), # honnin_v7
               主に第二号被保険者の収入により生計維持(d), # honnin_v7
               Not(第二号被保険者(d))))

### 年金原簿　honnin_v7.py ##################################################

年齢=(lambda d:26+d/360)
二十歳以上六十歳未満=(lambda d:And(20<=年齢(d),年齢(d)<60))
日本国内に住所を有する=(lambda d:And(200<d,d<600))
厚生年金保険法老齢等受給可能=(lambda d:False)
厚生年金保険の被保険者=(lambda d:And(300<d,d<500))
第二号被保険者の配偶者=(lambda d:And(400<d,d<550))
主に第二号被保険者の収入により生計維持=(lambda d:And(400<d,d<550))

#    *----日本在住---------------------------------------------------*
#    |                                                              |
#    |            *----企業に勤務---------------*                    |
#    |            |                            |                    |
#    |            |             *----結婚-----------------*         |
#    |            |             |              |          |         |
# ---*------------*-------------*--------------*----------*---------*------
# d=201          301           401            499        549       599
#    |            |                            |          |         |
#    *--第一号----**----------第二号-------------**-第三号---**-第一号--*


### 検証スクリプト v7.py ####################################################

from z3 import *

d=Int('d')

# 日450は，第号被保険者か？
s=Solver()
s.add(第一号被保険者(450))
print(s.check())
# unsat 日450では，第一号被保険者ではない．

s=Solver()
s.add(第二号被保険者(450))
print(s.check())
# sat　日450では，第二号被保険者である．

s=Solver()
s.add(第三号被保険者(450))
print(s.check())
# unsat　日450では，第三号被保険者ではない．

# 日450以外に第一号被保険者になりえるか？
t=Solver()
t.add(第二号被保険者(d),d!=450)
if t.check()==sat:
    print(t.model())
# [d=368]

# 同時に異なる種別の被験者になり得るか？
s=Solver()
p=Or(And(第一号被保険者(d),第二号被保険者(d)),
     And(第一号被保険者(d),第三号被保険者(d)),
     And(第二号被保険者(d),第三号被保険者(d)))
s.add(p)
print(s.check())
# unsat

# honnin_v7においては，第一号，第二号，第三号被保険者である日は，それぞれ
# 第一号被保険者：日201〜日300 および 日550〜日599
# 第二号被保険者：日301〜日499
# 第三号被保険者：日500〜日549
# であるが，これは以下のようであるが，これは次のようにして確認できる．

t=Solver()
p1 = ForAll(d,第一号被保険者(d)==Or(And(201<=d,d<=300),And(550<=d,d<=599)))
p2 = ForAll(d,第二号被保険者(d)==And(301<=d,d<=499))
p3 = ForAll(d,第三号被保険者(d)==And(500<=d,d<=549))
t.add(p1,p2,p3)
print(t.check())
# sat
