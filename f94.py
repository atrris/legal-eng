# f94.py　第九十四条　保険料の追納

from essentials import *
m,m1=Ints('m m1')
保険料免除種別,(法定,全額,四分の三,半額,四分の一,学生)= \
       EnumSort('保険料免除種別',
                 ('法定','全額','四分の三','半額','四分の一','学生'))
e=Const('e',保険料免除種別)

# 追納可能性判定
# m0:追納請求をした月,m1:追納対象の月,e:保険料免除の種別

追納可能=(lambda m0,m1,e:
            And(m0-m1<=120,
                Or(And(e!=学生,追納対象保険料免除(本人)(e)(m1),
                       ForAll(m,Implies(本人.保険料免除(m),m1<=m))),
                   And(e==学生,本人.保険料免除_学生(m1),
                       ForAll(m,Implies(本人.保険料免除_学生(m),m1<=m))))))
# p;年金原簿
追納対象保険料免除=(lambda p:lambda e:lambda m:
            If(e==法定,p.保険料法定免除(m),
            If(e==全額,p.保険料全額免除(m),
            If(e==四分の三,p.保険料四分の三免除(m),
            If(e==半額,p.保険料半額免除(m),
            If(e==四分の一,p.保険料四分の一免除(m),
            If(e==学生,p.保険料免除_学生(m),False)))))))

追納額=(lambda e,m0,m1:
             保険料(e,m1)+政令により定まる加算額(e,m0,m1))

# 追納可能(m0,m1,e)がTrueとなり追納が行われた場合には，追納前の年金原簿「本人」と
# 追納後の年金原簿「本人_post」の間には次のP,Q,Rが成立しなければならない．

P = 本人_post.保険料納付済(m)== \
           If(m==m1,True,本人.保険料納付済(m))
Q = 本人_post.追納により納付とみなされる期間(m)== \
           If(m==m1,True,本人.追納により納付とみなされる期間(m))
R = 追納対象保険料免除(本人_post)(e)(m)== \
           If(m==m1,False,追納対象保険料免除(本人)(e)(m))
